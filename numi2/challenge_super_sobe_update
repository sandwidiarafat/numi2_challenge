-- Function: public.challenge_super_sobe_update(timestamp without time zone, integer)

-- DROP FUNCTION public.challenge_super_sobe_update(timestamp without time zone, integer);

CREATE OR REPLACE FUNCTION public.challenge_super_sobe_update(
    _datetime timestamp without time zone,
    debug_mode integer DEFAULT NULL::integer)
  RETURNS void AS
$BODY$
BEGIN


insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
-- start list
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id, lu.list_id  
from list_users_c18_sobe  lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) between css.day_start and css.day_end and lu.campaign_id = 1
where css.rule_type in  ('date_only_start', 'date_only_complete') and css.active = TRUE and lu.list_start_date <= _datetime::date and lu.deleted_at is null and css.campaign_id = 2 -- add lu.deleted_at throughout 1/15/2017
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('date_only_start', 'date_only_complete') and css.campaign_id = 2; 


--end_date
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select lu.user_id, css.attribute_name, css.data_type, to_char(lu.list_start_date::date + (css.day_in - 1 ) * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, css.id, lu.list_id  
from list_users_c18_sobe lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) between css.day_start and css.day_end and lu.campaign_id = 1
where css.rule_type in  ('end_date') and css.active = TRUE and lu.list_start_date <= _datetime::date    and lu.deleted_at is null and css.campaign_id = 2
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('end_date') and css.campaign_id = 2; 

--2.1
-- c18_c9_task_day_count
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, css.data_type, cast(sum(usw.days_logged) as varchar) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from user_stats_weekly_mon_sobe usw
inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'task_count' and campaign_sequence = 9 and task_number = 1
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.days_logged) > 0
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and campaign_sequence = 9 and task_number = 1 and css.campaign_id = 2; 

--2.2
-- c18_c9_task_food_count
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, css.data_type, cast(sum(usw.consumed_total_items_logged) as varchar) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from user_stats_weekly_mon_sobe usw
inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'task_count' and campaign_sequence = 9 and task_number = 2
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.consumed_total_items_logged) > 0
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and campaign_sequence = 9 and task_number = 2 and css.campaign_id = 2; 

-- 2.3
-- c18_c9_task_day_count set to 0 check for does not exist
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select tt.user_id, tt.attribute_name, tt.data_type, '0' as data_value, tt.campaign_stream_steps_id, tt.list_users_id from (
select lu.user_id, css.attribute_name, css.data_type,  css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18_sobe lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and css.campaign_id = 2 and rule_type = 'task_count' and task_number = 1
where lu.campaign_id = 1
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and task_number = 1 and css.campaign_id = 2 ) tt;

-- 2.4
-- c18_c9_task_food_count set to 0 check for does not exist
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select tt.user_id, tt.attribute_name, tt.data_type, '0' as data_value, tt.campaign_stream_steps_id, tt.list_users_id from (
select lu.user_id, css.attribute_name, css.data_type,  css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18_sobe lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and css.campaign_id = 2 and rule_type = 'task_count' and task_number = 2
where lu.campaign_id = 1
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and task_number = 2 and css.campaign_id = 2 ) tt;

/***C18_day_count SUCCESS greater or equal to 5 ******************* challenge 2 ******************************** logged water 7 days *************************/
--insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
drop table if exists tmp_success_users_sobe;
create temp table tmp_success_users_sobe (user_id integer, attribute_name varchar(255), list_users_id integer);

insert into tmp_success_users_sobe (user_id, attribute_name, list_users_id)
select t1.user_id, t2.attribute_name, 
--t2.data_type, t2.data_value, t2.campaign_stream_steps_id, 
t2.list_users_id 
from (select distinct(user_id) from appboy_user_events_sb where attribute_name = 'C18_C9_TASK_DAY_COUNT' and cast(data_value as integer) >=5) t1
--left join
inner join  -- change 1/09
(
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code'  and task_number = 1
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
except  select aue.user_id, aue.attribute_name, 
--aue.data_type, aue.data_value, aue.campaign_stream_steps_id, 
aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code'  and task_number = 1 and css.campaign_id = 2; 

-- add for C18_C9_TASK2_BONUS_CODE hit 15 days
insert into tmp_success_users_sobe (user_id, attribute_name, list_users_id)
select t1.user_id, t2.attribute_name, 
--t2.data_type, t2.data_value, t2.campaign_stream_steps_id, 
t2.list_users_id 
from (select distinct(user_id) from appboy_user_events_sb where attribute_name = 'C18_C9_TASK_DAY_COUNT' and cast(data_value as integer) >=15) t1
--left join
inner join  -- change 1/09
(
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code'  and task_number = 2
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
except  select aue.user_id, aue.attribute_name, 
--aue.data_type, aue.data_value, aue.campaign_stream_steps_id, 
aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code'  and task_number = 2 and css.campaign_id = 2; 

/* C18_C9_BONUS_1_STATUS, BONUS_2_STATUS | SUCCESS ******************************************************/
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select tt.user_id, case when attribute_name = 'C18_C9_BONUS_1_CODE' then 'C18_C9_BONUS_1_STATUS' when attribute_name =  'C18_C9_BONUS_2_CODE' then 'C18_C9_BONUS_2_STATUS'
end as attribute_name, 'String' as data_type, 'SUCCESS' as data_value, case when attribute_name = 'C18_C9_BONUS_1_CODE' then 216 when attribute_name =  'C18_C9_BONUS_2_CODE' then 217
end as campaign_stream_steps_id, list_users_id
from tmp_success_users_sobe tt
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events_sb ;

-- promo code end date bonus 1 code date
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
-- C1_T1 
select t1.user_id, t2.attribute_name, t2.data_type, to_char(t2.list_start_date::date + t2.day_end + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users_sobe where attribute_name = 'C18_C9_BONUS_1_CODE' ) t1
inner join  -- change 1/09
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code_end_date' and task_number = 1
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
  union all
select t1.user_id, t2.attribute_name, t2.data_type, to_char(t2.list_start_date::date + t2.day_end + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users_sobe where attribute_name = 'C18_C9_BONUS_2_CODE' ) t1
inner join  -- change 1/09
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code_end_date' and task_number = 2
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code_end_date' and  css.campaign_id = 2 and task_number = 2
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code_end_date' and  css.campaign_id = 2;

/* assign promo code C5_T1_Task1 Bonus ***********************************************************/

-- step 1 C5_T1 assign promo code log food 5 days or more
insert into promo_code_users_sb  (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)

select t1.user_id, t2.attribute_name, t2.data_type, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users_sobe where attribute_name = 'C18_C9_BONUS_1_CODE') t1
inner join 
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code'  and task_number = 1
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
/*** add additional promo codes as rolled out unioni all *****/
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users_sb;

/*  step 2 - update user promo codes *************************************************************/
update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb
where attribute_name = 'C18_C9_BONUS_1_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb  where attribute_name = 'C18_C9_BONUS_1_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes_sb pc
set user_id = pcu.user_id
from promo_code_users_sb pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users_sb where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events_sb ;

update promo_code_users_sb
set date_sent = now()
where date_sent is null;

/* assign promo code C5_T1_Task2 Bonus log 15 days **********************************************/

-- step 1 C5_T1 assign promo code log food 5 days or more
insert into promo_code_users_sb (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)
select t1.user_id, t2.attribute_name, t2.data_type, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users_sobe where attribute_name = 'C18_C9_BONUS_2_CODE') t1
inner join 
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code'  and task_number = 2
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
/*** add additional promo codes as rolled out unioni all *****/
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users_sb;

/*  step 2 - update user promo codes *************************************************************/
update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb
where attribute_name = 'C18_C9_BONUS_2_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb where attribute_name = 'C18_C9_BONUS_2_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes_sb pc
set user_id = pcu.user_id
from promo_code_users_sb pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users_sb where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events_sb ;

update promo_code_users_sb
set date_sent = now()
where date_sent is null;
insert into challenge_run_log (function_name, created_at, updated_at)
select 'challenge_9_numi_sobe_update' as function_name, current_timestamp as created_at, current_timestamp as updated_at;


-- insert 'C18_C9_BONUS_SUPER_STATUS' | 'BONUS_SUPER_SUCCESS' into appboy user events
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select t1.user_id, t1.attribute_name, 'String' as data_type, t1.data_value, t1.campaign_stream_steps_id, t1.list_users_id from (
select usw.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.campaign_sequence
--select *
from user_stats_weekly_mon_sobe usw
inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id in (2) and attribute_name  = 'C18_C9_BONUS_SUPER_STATUS' and campaign_sequence in (9) and task_number = 1
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date, css.campaign_sequence
having sum(usw.consumed_total_items_logged) >= 200
) t1
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue where campaign_stream_steps_id = 189;


-- step 1 C18_C9 log food count 200 or greater
insert into promo_code_users_sb  (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)

select t1.user_id, t2.attribute_name, t2.data_type, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(usw.user_id)
	from user_stats_weekly_mon_sobe usw
	inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
	inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id in (2) and attribute_name  = 'C18_C9_BONUS_SUPER_STATUS' and campaign_sequence in (9) and 	task_number = 1
	where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
	group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date, css.campaign_sequence
	having sum(usw.consumed_total_items_logged) >= 200) t1
inner join 
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18_sobe  lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code'  and task_number = 3
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
/*** add additional promo codes as rolled out unioni all *****/
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users_sb ;

/*  step 2 - update user promo codes *************************************************************/
update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb
where attribute_name = 'C18_C9_BONUS_SUPER_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb where attribute_name = 'C18_C9_BONUS_SUPER_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes_sb pc
set user_id = pcu.user_id
from promo_code_users_sb pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users_sb where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events_sb where campaign_stream_steps_id = 184 ;

update promo_code_users
set date_sent = now()
where date_sent is null;

-- C18_C9_BONUS_SUPER_CODE_DATE
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select t1.user_id, t2.attribute_name, t2.data_type, to_char(t2.list_start_date::date + t2.day_end + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from promo_code_users_sb where attribute_name =  'C18_C9_BONUS_SUPER_CODE' ) t1
inner join  -- change 1/09
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code_end_date' and task_number = 3
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code_end_date' and  css.campaign_id = 2 and task_number = 3;

-- c18_c9_task_day_count tiered 1,2,3,4 tiers
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select usw.user_id, css.attribute_name, css.data_type, 
case when sum(usw.days_logged) between 5 and 9 then 'TIER_1_SUCCESS' when  sum(usw.days_logged) between 10 and 14 then 'TIER_2_SUCCESS' when  sum(usw.days_logged) between 15 and 19 then 'TIER_3_SUCCESS' when  sum(usw.days_logged) >= 20 then 'TIER_4_SUCCESS'end   as data_value--,  sum(usw.days_logged)
, css.id as campaign_stream_steps_id, lu.list_id as list_users_id--, sum(usw.days_logged)
from user_stats_weekly_mon_sobe usw
inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and attribute_name = 'C18_C9_TIER_STATUS' and rule_type = 'result_status_success'
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start - interval '28 day'  )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.days_logged) >= 5
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'result_status_success'  and css.attribute_name = 'C18_C9_TIER_STATUS'  and css.campaign_id = 2; 

-- C18_C9_TIER_CODE_DATE
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select usw.user_id, css.attribute_name, css.data_type, 
to_char(lu.list_start_date::date + css.day_end + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value,
css.id as campaign_stream_steps_id, lu.list_id as list_users_id--, sum(usw.days_logged)
from user_stats_weekly_mon_sobe usw
inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code_end_date' and task_number = 4
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start - interval '28 day'  )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.days_logged) >= 5
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join  campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code_end_date' and task_number = 4   and css.campaign_id = 2; 


/* Challenge 10 **************************************************************************************************************************************************/
/* ***************************************************************************************************************************************************************/

insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
-- start list
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id, lu.list_id  
from list_users_c18_sobe  lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) between css.day_start and css.day_end and lu.campaign_id = 1
where css.rule_type in  ('date_only_start', 'date_only_complete') and css.active = TRUE and lu.list_start_date <= _datetime::date and lu.deleted_at is null and css.campaign_id = 3 -- add lu.deleted_at throughout 1/15/2017
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('date_only_start', 'date_only_complete') and css.campaign_id = 3; 

--end_date
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select lu.user_id, css.attribute_name, css.data_type, to_char(lu.list_start_date::date + (css.day_in - 1 ) * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, css.id, lu.list_id  
from list_users_c18_sobe lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) between css.day_start and css.day_end and lu.campaign_id = 1
where css.rule_type in  ('end_date') and css.active = TRUE and lu.list_start_date <= _datetime::date    and lu.deleted_at is null and css.campaign_id = 3
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('end_date') and css.campaign_id = 3; 

/* create temp table for date range ****/
drop table if exists tmp_c10_date_range_sobe;
CREATE temp table tmp_c10_date_range_sobe (id integer, list_start_date date, campaign_stream_steps_id integer, day_start integer, day_end integer, campaign_sequence integer, date_diff integer);

insert into tmp_c10_date_range_sobe(id, list_start_date, campaign_stream_steps_id, day_start, day_end, campaign_sequence, date_diff)
select l.id, l.list_start_date, css.id as campaign_stream_steps_id, css.day_start, css.day_end, 
css.campaign_sequence, datediff('day', l.list_start_date::date, _datetime::date) as date_diff
from lists_sobe l
inner join campaign_stream_steps_sobe css on datediff('day', l.list_start_date::date, _datetime::date)  
between day_start and day_end and
rule_type = 'task_count' and css.campaign_id = 3 and css.task_number = 1;

-- c18_c10_task_day_count  lean protein, fruit, healthy fat
/* day count sb_lean_protein, fruit, healthy fat  ********************************/
drop table if exists tmp_ns_challenge_10_day_sobe;  
create temp table tmp_ns_challenge_10_day_sobe ( id integer, user_id integer, assigned_date date, consumable_id integer, consumable_type varchar(255),  created_at timestamp, food_categories jsonb, food_type varchar(255), food_category varchar(255));

insert into tmp_ns_challenge_10_day_sobe (id, user_id, assigned_date, consumable_id, consumable_type,  created_at,  food_categories)
select dh.id, dh.user_id, dh.assigned_date, dh.consumable_id, dh.consumable_type,  dh.created_at,  dh.food_categories
from diet_histories_tracker dh 
where dh.assigned_date >= (select min(start_date) from (select t.list_start_date + t.day_start as start_date from tmp_c10_date_range_sobe t where t.campaign_sequence = 10) st )
and dh.assigned_date <= (select max(end_date) from (select t.list_start_date + t.day_end - 1 as end_date from tmp_c10_date_range_sobe t  where t.campaign_sequence = 10) ed ) 
and dh.deleted_at is null;

create index "idx_tmp_ns_challenge_10_day_sobe_user_id" on tmp_ns_challenge_10_day_sobe using btree(user_id);

delete from tmp_ns_challenge_10_day_sobe
where user_id not in 
(select lu.user_id from  list_users_c18_sobe lu
inner join tmp_c10_date_range_sobe t on t.id = lu.list_id
where t.campaign_sequence = 10);

create index "idx_tmp_ns_challenge_10_day_sobe_consumable_id" on tmp_ns_challenge_10_day_sobe using btree(consumable_id);
create index "idx_tmp_ns_challenge_10_day_sobe_consumable_type" on tmp_ns_challenge_10_day_sobe using btree(consumable_type);
create index "idx_tmp_ns_challenge_10_day_sobe_consumable_food_categories" on tmp_ns_challenge_10_day_sobe using btree(food_categories);

-- get quicklog food category
update tmp_ns_challenge_10_day_sobe nes
set food_category = ql.food_category
from quick_logs ql
where nes.consumable_id = ql.id
and nes.consumable_type = 'QuickLog';

-- update food_category default category
update tmp_ns_challenge_10_day_sobe nes
set food_category = 'sb_leanprotein'
where nes.id in (
select zz.id from (
select nes.id, nes.consumable_id from tmp_ns_challenge_10_day_sobe nes
left join  (
select id, json_array_elements(food_categories::json) from tmp_ns_challenge_10_day_sobe where consumable_type in ('FoodCatalog') ) tt on nes.id = tt.id
where nes.consumable_type in ('FoodCatalog') and  tt.id is null ) zz
inner join food_catalogs fc on zz.consumable_id = fc.id and (fc.food_sb_leanprotein > 0 or fc.food_sb_healthyfat > 0 or fc.food_sb_fruit > 0 ) and breakfast = false and entree = false
);

-- updated custom category logged foods
update tmp_ns_challenge_10_day_sobe nes
set food_category = 'sb_leanprotein'
where nes.id in (
select distinct(id) from (
select id, user_id, consumable_id, consumable_type, assigned_date, json_array_elements(food_categories::json) as dtl from tmp_ns_challenge_10_day_sobe where consumable_type in ('FoodCatalog','FoodBrand') ) tt
where (dtl->>'category' = 'sb_leanprotein' or dtl->>'category' = 'sb_fruit' or dtl->>'category' = 'sb_healthyfat'));--and user_id = 10

-- insert day count
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select zz.user_id, 'C18_C10_TASK_DAY_COUNT' as attribute_name, 'Integer' as data_type, cast(count(*) as varchar) as data_value, 195 as campaign_stream_steps_id, list_id as list_users_id  from (
select tt.user_id, tt.assigned_date, lu.list_id from tmp_ns_challenge_10_day_sobe tt
inner join list_users_c18_sobe lu on tt.user_id = lu.user_id
inner join tmp_c10_date_range_sobe dd on dd.id = lu.list_id
where tt.assigned_date >= lu.list_start_date + dd.day_start 
and tt.assigned_date <=  lu.list_start_date + dd.day_end - 1 
and tt.food_category is not null
group by tt.user_id, tt.assigned_date, lu.list_id ) zz
group by zz.user_id, zz.list_id
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue where campaign_stream_steps_id = 195;

-- c18_c10_task_water_ounces_count
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, css.data_type, cast(sum(usw.water_consumed) as varchar) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from user_stats_weekly_mon_sobe usw
inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 3 and rule_type = 'task_count' and campaign_sequence = 10 and task_number = 2
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.water_consumed) > 0
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and campaign_sequence = 10 and task_number = 2 and css.campaign_id = 3; 

-- c18_c10_task_day_count set to 0 check for does not exist
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select tt.user_id, tt.attribute_name, tt.data_type, '0' as data_value, tt.campaign_stream_steps_id, tt.list_users_id from (
select lu.user_id, css.attribute_name, css.data_type,  css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18_sobe lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and css.campaign_id = 3 and rule_type = 'task_count' and task_number = 1
where lu.campaign_id = 1
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and task_number = 1 and css.campaign_id = 3 ) tt;

-- c18_c10_task_water_count set to 0 check for does not exist
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select tt.user_id, tt.attribute_name, tt.data_type, '0' as data_value, tt.campaign_stream_steps_id, tt.list_users_id from (
select lu.user_id, css.attribute_name, css.data_type,  css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18_sobe lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and css.campaign_id = 3 and rule_type = 'task_count' and task_number = 2
where lu.campaign_id = 1
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and task_number = 2 and css.campaign_id = 3 ) tt;

/* C10 C18_C10_TIER_1_STATUS, 2, 3, 4 *********************************************************************************************************************************/
-- determine the tier 1,2,3,4 and update appboy_user_events_sb
drop table if exists tmp_ns_challenge_10_day_sobe_aggregate;  
create temp table tmp_ns_challenge_10_day_sobe_aggregate (user_id integer, data_value integer, list_users_id integer);

insert into tmp_ns_challenge_10_day_sobe_aggregate (user_id, data_value, list_users_id)
select zz.user_id, count(*) as data_value, list_id as list_users_id  from (
select tt.user_id, tt.assigned_date, lu.list_id from tmp_ns_challenge_10_day_sobe tt
inner join list_users_c18_sobe lu on tt.user_id = lu.user_id
inner join tmp_c10_date_range_sobe dd on dd.id = lu.list_id
where tt.assigned_date >= lu.list_start_date + dd.day_start 
and tt.assigned_date <=  lu.list_start_date + dd.day_end - 1 
and tt.food_category is not null
group by tt.user_id, tt.assigned_date, lu.list_id ) zz
group by zz.user_id, zz.list_id;

insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, 'C18_C10_TIER_1_STATUS' as attribute_name, 'String' as data_type, 'C10_TIER_1_SUCCESS' as data_value, 
206 as campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 5
union
select user_id, 'C18_C10_TIER_2_STATUS' as attribute_name, 'String' as data_type, 'C10_TIER_2_SUCCESS' as data_value, 
207 as campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 10
union
select user_id, 'C18_C10_TIER_3_STATUS' as attribute_name, 'String' as data_type, 'C10_TIER_3_SUCCESS' as data_value, 
208 as campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 15
union
select user_id, 'C18_C10_TIER_4_STATUS' as attribute_name, 'String' as data_type, 'C10_TIER_4_SUCCESS' as data_value, 
209 as campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 20
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue where campaign_stream_steps_id in (206,207,208,209);

-- bonus super status consume 1000 oz of water
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, 'C18_C10_BONUS_SUPER_STATUS' as attribute_name, 'String' as data_type, 'BONUS_SUPER_SUCCESS' as data_value, 201 as campaign_stream_steps_id, lu.list_id as list_users_id
from user_stats_weekly_mon_sobe usw
inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 3 and rule_type = 'task_count' and campaign_sequence = 10 and task_number = 2
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.water_consumed) >= 1000
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue where campaign_stream_steps_id in (201);

/* C18_C10_BONUS_1_STATUS, BONUS_2_STATUS | SUCCESS  10 and 20 days ******************************************************/
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, 'C18_C10_BONUS_1_STATUS' as attribute_name, 'String' as data_type, 'SUCCESS' as data_value, 221 as campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 10
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events_sb where campaign_stream_steps_id = 221
union
select user_id, 'C18_C10_BONUS_2_STATUS' as attribute_name, 'String' as data_type, 'SUCCESS' as data_value, 222 as campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 20
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events_sb where campaign_stream_steps_id = 222;

-- set promo codes for tier 1,2,3,4, bonus 1,2
-- C10_tier 1,2,3,4 promo codesdetermine tiers for promo codes
insert into promo_code_users_sb  (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)
select user_id, 'C18_C10_TIER_1_CODE' as attribute_name, 'String' as data_type, 202 campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 5
union
select user_id, 'C18_C10_TIER_2_CODE' as attribute_name, 'String' as data_type, 203 campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 10
union
select user_id, 'C18_C10_TIER_3_CODE' as attribute_name, 'String' as data_type, 204 campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 15
union
select user_id, 'C18_C10_TIER_4_CODE' as attribute_name, 'String' as data_type, 205 campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 20
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users_sb 
union
select user_id, 'C18_C10_BONUS_1_CODE' as attribute_name, 'String' as data_type, 197 campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 10
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users_sb 
union
select user_id, 'C18_C10_BONUS_2_CODE' as attribute_name, 'String' as data_type, 198 campaign_stream_steps_id, list_users_id 
from tmp_ns_challenge_10_day_sobe_aggregate where data_value >= 20
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users_sb ;

/*  step 2 - update user promo codes *************************************************************/
update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb  
where attribute_name like 'C18_C10_TIER_1_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb where attribute_name like  'C18_C10_TIER_1_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb
where attribute_name like 'C18_C10_TIER_2_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb where attribute_name like  'C18_C10_TIER_2_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb 
where attribute_name like 'C18_C10_TIER_3_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb where attribute_name like  'C18_C10_TIER_3_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb
where attribute_name like 'C18_C10_TIER_4_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb where attribute_name like  'C18_C10_TIER_4_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb
where attribute_name like 'C18_C10_BONUS_1_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb where attribute_name like  'C18_C10_BONUS_1_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb
where attribute_name like 'C18_C10_BONUS_2_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb where attribute_name like  'C18_C10_BONUS_2_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes_sb pc
set user_id = pcu.user_id
from promo_code_users_sb pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users_sb where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events_sb where campaign_stream_steps_id  in  (202,203,204,205, 197,198) ;

update promo_code_users_sb
set date_sent = now()
where date_sent is null;

/* C10_TIER_1,2,3,4_SUCCESS END DATE ********************************************************************/
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select t1.user_id, 'C18_C10_TIER_CODE_DATE' as attribute_name, 'String' as data_type, to_char(lu.list_start_date::date + 168 + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, 199 as  campaign_stream_steps_id
,t1.list_users_id from tmp_ns_challenge_10_day_sobe_aggregate t1 
inner join list_users_c18_sobe lu on t1.user_id = lu.user_id where data_value >= 5
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue where campaign_stream_steps_id = 199;

-- bonus super status end date
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, 'C18_C10_TIER_CODE_DATE' as attribute_name, 'String' as data_type, to_char(lu.list_start_date::date + 168 + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, 199 as  campaign_stream_steps_id, lu.list_id as list_users_id
from user_stats_weekly_mon_sobe usw
inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 3 and rule_type = 'task_count' and campaign_sequence = 10 and task_number = 2
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.water_consumed) >= 1000
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue where campaign_stream_steps_id = 199;


/* C10 expiration 7 days after challenge ends *************************************************************/

--insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

/*
select tt.user_id, tt.attribute_name, tt.data_type, tt.data_value, tt.campaign_stream_steps_id, tt.list_users_id from appboy_user_events_sb aue 
inner join (
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 3 and rule_type = 'result_status_success_expiration' -- and campaign_sequence = 1
where  lu.campaign_id = 1
) tt on aue.user_id = tt.user_id and aue.campaign_stream_steps_id = tt.day_in
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue --where campaign_stream_steps_id = 199;
*/

/* C9 EXPIRATIONS *******************************************************************************************************************************/
/* C18_C9_TIER_STATUS | BONUS_STATUS | EXPIRE_SUCCESS ******************************************************************************************/
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select tt.user_id, tt.attribute_name, tt.data_type, tt.data_value, tt.campaign_stream_steps_id, tt.list_users_id from appboy_user_events_sb aue 
inner join (
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'result_status_success_expiration' -- and campaign_sequence = 1
where  lu.campaign_id = 1
) tt on aue.user_id = tt.user_id and aue.campaign_stream_steps_id = tt.day_in
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue;



drop table if exists tmp_c10_date_range_sobe;
drop table if exists tmp_success_users_sobe;
drop table if exists tmp_c10_date_range_sobe;
drop table if exists tmp_ns_challenge_10_day_sobe_aggregate;


update challenge_run_log
set updated_at = clock_timestamp()
where id in (select id from challenge_run_log where function_name = 'challenge_9_numi_sobe_update' order by created_at desc limit 1);

END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION public.challenge_super_sobe_update(timestamp without time zone, integer)
  OWNER TO gfuser;
