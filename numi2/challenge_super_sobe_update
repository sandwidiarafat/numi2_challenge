-- Function: public.challenge_super_sobe_update(timestamp without time zone, integer)

-- DROP FUNCTION public.challenge_super_sobe_update(timestamp without time zone, integer);

CREATE OR REPLACE FUNCTION public.challenge_super_sobe_update(
    _datetime timestamp without time zone,
    debug_mode integer DEFAULT NULL::integer)
  RETURNS void AS
$BODY$
BEGIN


insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

-- start list
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id, lu.list_id  
from list_users_c18_sobe  lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) between css.day_start and css.day_end and lu.campaign_id = 1
where css.rule_type in  ('date_only_start', 'date_only_complete') and css.active = TRUE and lu.list_start_date <= _datetime::date and lu.deleted_at is null and css.campaign_id = 2 -- add lu.deleted_at throughout 1/15/2017
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('date_only_start', 'date_only_complete') and css.campaign_id = 2; 


--end_date
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select lu.user_id, css.attribute_name, css.data_type, to_char(lu.list_start_date::date + (css.day_in - 1 ) * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, css.id, lu.list_id  
from list_users_c18_sobe lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) between css.day_start and css.day_end and lu.campaign_id = 1
where css.rule_type in  ('end_date') and css.active = TRUE and lu.list_start_date <= _datetime::date    and lu.deleted_at is null and css.campaign_id = 2
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('end_date') and css.campaign_id = 2; 


--2.1
-- c18_c9_task_day_count
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select usw.user_id, css.attribute_name, css.data_type, cast(sum(usw.days_logged) as varchar) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from user_stats_weekly_mon_sobe usw
inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'task_count' and campaign_sequence = 9 and task_number = 1
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.days_logged) > 0
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and campaign_sequence = 9 and task_number = 1 and css.campaign_id = 2; 

--2.2
-- c18_c9_task_food_count
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select usw.user_id, css.attribute_name, css.data_type, cast(sum(usw.consumed_total_items_logged) as varchar) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from user_stats_weekly_mon_sobe usw
inner join list_users_c18_sobe lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 1  and lu.deleted_at is null
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'task_count' and campaign_sequence = 9 and task_number = 2
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.consumed_total_items_logged) > 0
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and campaign_sequence = 9 and task_number = 2 and css.campaign_id = 2; 



-- 2.3
-- c18_c9_task_day_count set to 0 check for does not exist
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select tt.user_id, tt.attribute_name, tt.data_type, '0' as data_value, tt.campaign_stream_steps_id, tt.list_users_id from (
select lu.user_id, css.attribute_name, css.data_type,  css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18_sobe lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and css.campaign_id = 2 and rule_type = 'task_count' and task_number = 1
where lu.campaign_id = 1
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and task_number = 1 and css.campaign_id = 2 ) tt;

-- 2.4
-- c18_c9_task_food_count set to 0 check for does not exist
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select tt.user_id, tt.attribute_name, tt.data_type, '0' as data_value, tt.campaign_stream_steps_id, tt.list_users_id from (
select lu.user_id, css.attribute_name, css.data_type,  css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18_sobe lu
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and css.campaign_id = 2 and rule_type = 'task_count' and task_number = 2
where lu.campaign_id = 1
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and task_number = 2 and css.campaign_id = 2 ) tt;


/***C18_day_count SUCCESS greater or equal to 5 ******************* challenge 2 ******************************** logged water 7 days *************************/
--insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
drop table if exists tmp_success_users_sobe;
create temp table tmp_success_users_sobe (user_id integer, attribute_name varchar(255), list_users_id integer);

insert into tmp_success_users_sobe (user_id, attribute_name, list_users_id)

select t1.user_id, t2.attribute_name, 
--t2.data_type, t2.data_value, t2.campaign_stream_steps_id, 
t2.list_users_id 
from (select distinct(user_id) from appboy_user_events_sb where attribute_name = 'C18_C9_TASK_DAY_COUNT' and cast(data_value as integer) >=5) t1
--left join
inner join  -- change 1/09
(
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code'  and task_number = 1
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
except  select aue.user_id, aue.attribute_name, 
--aue.data_type, aue.data_value, aue.campaign_stream_steps_id, 
aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code'  and task_number = 1 and css.campaign_id = 2; 

-- add for C18_C9_TASK2_BONUS_CODE hit 15 days
insert into tmp_success_users_sobe (user_id, attribute_name, list_users_id)

select t1.user_id, t2.attribute_name, 
--t2.data_type, t2.data_value, t2.campaign_stream_steps_id, 
t2.list_users_id 
from (select distinct(user_id) from appboy_user_events_sb where attribute_name = 'C18_C9_TASK_DAY_COUNT' and cast(data_value as integer) >=15) t1
--left join
inner join  -- change 1/09
(
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code'  and task_number = 2
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
except  select aue.user_id, aue.attribute_name, 
--aue.data_type, aue.data_value, aue.campaign_stream_steps_id, 
aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code'  and task_number = 2 and css.campaign_id = 2; 



-- promo code end date bonus 1 code date
insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
-- C1_T1 
select t1.user_id, t2.attribute_name, t2.data_type, to_char(t2.list_start_date::date + t2.day_end + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users_sobe where attribute_name = 'C18_C9_BONUS_1_CODE' ) t1
inner join  -- change 1/09
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code_end_date' and task_number = 1
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
  union all
select t1.user_id, t2.attribute_name, t2.data_type, to_char(t2.list_start_date::date + t2.day_end + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users_sobe where attribute_name = 'C18_C9_BONUS_2_CODE' ) t1
inner join  -- change 1/09
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code_end_date' and task_number = 2
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code_end_date' and  css.campaign_id = 2 and task_number = 2
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events_sb aue
inner join campaign_stream_steps_sobe css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code_end_date' and  css.campaign_id = 2 --and task_number = 1
;


/** assign promo code C5_T1_Task1 Bonus **/

-- step 1 C5_T1 assign promo code log food 5 days or more
insert into promo_code_users_sb  (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)

select t1.user_id, t2.attribute_name, t2.data_type, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users_sobe where attribute_name = 'C18_C9_BONUS_1_CODE') t1
inner join 
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code'  and task_number = 1
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
/*** add additional promo codes as rolled out unioni all *****/
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users_sb;


/*  step 2 - update user promo codes *************************************************************/
update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb
where attribute_name = 'C18_C9_BONUS_1_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb  where attribute_name = 'C18_C9_BONUS_1_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes_sb pc
set user_id = pcu.user_id
from promo_code_users_sb pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users_sb where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events_sb ;

update promo_code_users_sb
set date_sent = now()
where date_sent is null;




/** assign promo code C5_T1_Task2 Bonus log 15 days **/

-- step 1 C5_T1 assign promo code log food 5 days or more
insert into promo_code_users_sb (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)

select t1.user_id, t2.attribute_name, t2.data_type, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users_sobe where attribute_name = 'C18_C9_BONUS_2_CODE') t1
inner join 
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18_sobe lu 
inner join campaign_stream_steps_sobe css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 2 and rule_type = 'promo_code'  and task_number = 2
where  lu.campaign_id = 1 )  t2 on t1.user_id = t2.user_id
/*** add additional promo codes as rolled out unioni all *****/
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users_sb;


/*  step 2 - update user promo codes *************************************************************/
update promo_code_users_sb aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users_sb
where attribute_name = 'C18_C9_BONUS_2_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes_sb where attribute_name = 'C18_C9_BONUS_2_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes_sb pc
set user_id = pcu.user_id
from promo_code_users_sb pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events_sb (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users_sb where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events_sb ;

update promo_code_users_sb
set date_sent = now()
where date_sent is null;
insert into challenge_run_log (function_name, created_at, updated_at)
select 'challenge_9_numi_sobe_update' as function_name, current_timestamp as created_at, current_timestamp as updated_at;

update challenge_run_log
set updated_at = clock_timestamp()
where id in (select id from challenge_run_log where function_name = 'challenge_9_numi_sobe_update' order by created_at desc limit 1);

END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION public.challenge_super_sobe_update(timestamp without time zone, integer)
  OWNER TO gfuser;
