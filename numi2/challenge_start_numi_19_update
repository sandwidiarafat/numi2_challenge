-- FUNCTION: public.challenge_start_numi_19_update(timestamp without time zone, integer)

-- DROP FUNCTION public.challenge_start_numi_19_update(timestamp without time zone, integer);

CREATE OR REPLACE FUNCTION public.challenge_start_numi_19_update(
	_datetime timestamp without time zone,
	debug_mode integer DEFAULT NULL::integer)
    RETURNS void
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$



BEGIN

insert into challenge_run_log (function_name, created_at, updated_at)
select 'challenge_start_numi_19_update' as function_name, current_timestamp as created_at, current_timestamp as updated_at;

/** 1.0 step 1 initiate campaigns **/  --1/6 1,574 1/7 1874

-- 1.1
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id, lu.list_id  
--select *
from list_users_c19 lu
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and lu.campaign_id = css.campaign_id
where css.rule_type in  ('date_only','date_only_start', 'date_only_complete') and css.active = TRUE and lu.list_start_date <= _datetime::date + interval '7' day and lu.deleted_at is null and css.campaign_id = 14 
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('date_only','date_only_start', 'date_only_complete') and css.campaign_id = 14; 


-- 1.2
--start_date
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select lu.user_id, css.attribute_name, css.data_type, to_char(lu.list_start_date::date, 'MM /DD /YYYY') as data_value, css.id, lu.list_id  
from list_users_c19 lu
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and lu.campaign_id = css.campaign_id
where css.rule_type in  ('start_date') and css.active = TRUE and lu.list_start_date <= _datetime::date + interval '7' day   and lu.deleted_at is null and css.campaign_id = 14
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('start_date') and css.campaign_id = 14; 

-- 1.3
--end_date
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

select lu.user_id, css.attribute_name, css.data_type, to_char(lu.list_start_date::date + (css.day_in - 1 ) * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, css.id, lu.list_id  
from list_users_c19 lu
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and lu.campaign_id = css.campaign_id
where css.rule_type in  ('end_date') and css.active = TRUE and lu.list_start_date <= _datetime::date + interval '7' day   and lu.deleted_at is null and css.campaign_id = 14
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('end_date') and css.campaign_id = 14; 



IF(debug_mode = 1)
THEN
update appboy_user_events
set date_sent = '2020-01-01'--, status = 'COMPLETED'
where date_sent is null;

else

end if;

update challenge_run_log
set updated_at = clock_timestamp()
where id in (select id from challenge_run_log where function_name = 'challenge_start_numi_19_update' order by created_at desc limit 1);



END;
$BODY$;

ALTER FUNCTION public.challenge_start_numi_19_update(timestamp without time zone, integer)
    OWNER TO gfuser;
