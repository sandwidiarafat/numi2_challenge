-- Function: public.list_users_c18_sobe_update()

-- DROP FUNCTION public.list_users_c18_sobe_update();

CREATE OR REPLACE FUNCTION public.list_users_c18_sobe_update()
  RETURNS void AS
$BODY$
BEGIN

insert into list_users_c18_sobe  --69,627 1/1 --2349 1/2  --2263 1/3  -- 1/4 1606  -- 1/5 1712 --1/6 1574  1/7 1874
(user_id, start_date, list_id, created_at, updated_at, campaign_id, list_start_date)

select t1.user_id, t1.start_date, t1.list_id, t1.created_at, t1.updated_at, t1.campaign_id, t1.list_start_date 
from (
select p.user_id,(p.created_at + (select utc_offset from pg_timezone_names where name = 'EST'))::date as start_date, l.id as list_id, 
now() as created_at, now() as updated_at, l.campaign_id, 	l.list_start_date as list_start_date 
-- select *
from profiles_tracker p 
inner join users_tracker u on p.user_id = u.id
inner join pg_timezone_names tz on tz.name = u.timezone  /** need to add these 2 lines when 2 zones are available**/
inner join lists_sobe l on (p.created_at + tz.utc_offset)::date between l.date_start and l.date_end and (p.created_at + tz.utc_offset)::date < now()::date --and l.campaign_id = 3
--inner join lists_sobe l on (p.created_at + (select utc_offset from pg_timezone_names where name = 'EST'))::date between l.date_start and l.date_end and (p.created_at + (select utc_offset from pg_timezone_names where name = 'EST') )::date < now()::date --and l.campaign_id = 3
where l.campaign_id = 1 
) t1
left join list_users_c18_sobe bb on t1.user_id = bb.user_id and t1.campaign_id = bb.campaign_id
 where bb.user_id is null
order by t1.list_id, t1.user_id ;

insert into challenge_run_log (function_name, created_at, updated_at)
select 'list_users_c18_sobe_update' as function_name, now() as created_at, now() as updated_at;

END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 1000;
ALTER FUNCTION public.list_users_c18_sobe_update()
  OWNER TO gfuser;
