-- Function: public.challenge_super_update(timestamp without time zone, integer)

-- DROP FUNCTION public.challenge_super_update(timestamp without time zone, integer);

CREATE OR REPLACE FUNCTION public.challenge_super_update(
    _datetime timestamp without time zone,
    debug_mode integer DEFAULT NULL::integer)
  RETURNS void AS
$BODY$
BEGIN

/* C9 and beyond C18_C9%_ACTIVE and C18_C9%_END_DATE *******************************************************************/ 

insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
-- start list
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id, lu.list_id  
from list_users_c18 lu
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date) between css.day_start and css.day_end and lu.campaign_id = 3
where css.rule_type in  ('date_only_start', 'date_only_complete') and css.active = TRUE and lu.list_start_date <= _datetime::date and lu.deleted_at is null and css.campaign_id in (6,7,8) 
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('date_only_start', 'date_only_complete') and css.campaign_id in (6,7,8); 

--end_date
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select lu.user_id, css.attribute_name, css.data_type, to_char(lu.list_start_date::date + (css.day_in - 1 ) * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, css.id, lu.list_id  
from list_users_c18 lu
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date) between css.day_start and css.day_end and lu.campaign_id = 3
where css.rule_type in  ('end_date') and css.active = TRUE and lu.list_start_date <= _datetime::date and lu.deleted_at is null and css.campaign_id in  (6,7,8)
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and css.rule_type in  ('end_date') and css.campaign_id in (6,7,8); 

/* TASK DAY COUNT ******************************************************************************************************/
--2.1
-- c18_c9/c10_task_day_count
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, css.data_type, cast(sum(usw.days_logged) as varchar) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from user_stats_weekly_mon usw
inner join list_users_c18 lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id in (6,7,8) and rule_type = 'task_count' and campaign_sequence in (9,10,11) and task_number = 1
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.days_logged) > 0
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and campaign_sequence in (9,10,11) and task_number = 1 and css.campaign_id in  (6,7,8); 

/* TASK FOOD COUNT ******************************************************************************************************/
--2.2
-- c18_c9/c10_task_food_count
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, css.data_type, cast(sum(usw.consumed_total_items_logged) as varchar) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from user_stats_weekly_mon usw
inner join list_users_c18 lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id in (6,7,8) and rule_type = 'task_count' and campaign_sequence in  (9,10,11) and task_number = 2
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.consumed_total_items_logged) > 0
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and campaign_sequence in (9,10,11) and task_number = 2 and css.campaign_id in (6,7,8); 

-- 2.3
-- c18_c9_task_day_count set to 0 check for does not exist
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select tt.user_id, tt.attribute_name, tt.data_type, '0' as data_value, tt.campaign_stream_steps_id, tt.list_users_id from (
select lu.user_id, css.attribute_name, css.data_type,  css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18 lu
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and css.campaign_id in (6,7,8) and rule_type = 'task_count' and task_number = 1
where lu.campaign_id = 3 
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and task_number = 1 and css.campaign_id in (6,7,8) ) tt;

-- 2.4
-- c18_c9_task_food_count set to 0 check for does not exist
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select tt.user_id, tt.attribute_name, tt.data_type, '0' as data_value, tt.campaign_stream_steps_id, tt.list_users_id from (
select lu.user_id, css.attribute_name, css.data_type,  css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18 lu
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and css.campaign_id in (6,7,8) and rule_type = 'task_count' and task_number = 2
where lu.campaign_id = 3 
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and task_number = 2 and css.campaign_id in (6,7,8) ) tt;

/* C11 adding breakfast, lunch and dinner counts ***************************************************************************/

drop table if exists tmp_c11_date_range_numi;
CREATE temp table tmp_c11_date_range_numi (id integer, list_start_date date, campaign_stream_steps_id integer, day_start integer, day_end integer, campaign_sequence integer, date_diff integer);

insert into tmp_c11_date_range_numi(id, list_start_date, campaign_stream_steps_id, day_start, day_end, campaign_sequence, date_diff)
select l.id, l.list_start_date, css.id as campaign_stream_steps_id, css.day_start, css.day_end, 
css.campaign_sequence, datediff('day', l.list_start_date::date, _datetime::date) as date_diff
from lists  l
inner join campaign_stream_steps css on datediff('day', l.list_start_date::date, _datetime::date)  
between day_start and day_end and
rule_type = 'task_count' and css.campaign_id = 8 and css.task_number = 3 and l.campaign_id = 3;

--select * from tmp_c11_date_range_numi

-- c18_c10_task_day_count  lean protein, fruit, healthy fat
/* day count sb_lean_protein, fruit, healthy fat  ********************************/
drop table if exists tmp_numi_challenge_11_day_meal_occasion;  
create temp table tmp_numi_challenge_11_day_meal_occasion ( user_id integer, meal_occasion_id integer, cnt integer);

insert into tmp_numi_challenge_11_day_meal_occasion (user_id, meal_occasion_id, cnt)
select dh.user_id, dh.meal_occasion_id, count(*) as cnt
from diet_histories_numi2 dh 
where dh.assigned_date >= (select min(start_date) from (select t.list_start_date + t.day_start as start_date from tmp_c11_date_range_numi t where t.campaign_sequence = 11) st )
and dh.assigned_date <= (select max(end_date) from (select t.list_start_date + t.day_end - 1 as end_date from tmp_c11_date_range_numi  t  where t.campaign_sequence = 11) ed ) 
and dh.deleted_at is null and dh.meal_occasion_id in (1,3,5)
group by dh.user_id, dh.meal_occasion_id;

create index "idx_tmp_numi_challenge_11_day_meal_occasion_user_id" on tmp_numi_challenge_11_day_meal_occasion using btree(user_id);

delete from tmp_numi_challenge_11_day_meal_occasion
where user_id not in 
(select lu.user_id from  list_users_c18 lu
inner join tmp_c11_date_range_numi t on t.id = lu.list_id
where t.campaign_sequence = 11);

-- C18_C11_TASK_BREAKFAST_COUNT
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, css.data_type, cast(usw.cnt as varchar) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from tmp_numi_challenge_11_day_meal_occasion usw
inner join list_users_c18 lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id in (8) and rule_type = 'task_count' and campaign_sequence in (11) and task_number = 3
where usw.meal_occasion_id = 1
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and campaign_sequence in (11) and task_number = 3 and css.campaign_id in  (8); 

-- C18_C11_TASK_LUNCH_COUNT
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, css.data_type, cast(usw.cnt as varchar) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from tmp_numi_challenge_11_day_meal_occasion usw
inner join list_users_c18 lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id in (8) and rule_type = 'task_count' and campaign_sequence in (11) and task_number = 4
where usw.meal_occasion_id = 3
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and campaign_sequence in (11) and task_number = 4 and css.campaign_id in  (8); 


-- C18_C11_TASK_DINNER_COUNT
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, css.data_type, cast(usw.cnt as varchar) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from tmp_numi_challenge_11_day_meal_occasion usw
inner join list_users_c18 lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id in (8) and rule_type = 'task_count' and campaign_sequence in (11) and task_number = 5
where usw.meal_occasion_id = 5
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and campaign_sequence in (11) and task_number = 5 and css.campaign_id in  (8); 

-- c18_c11_task_BREAKFAST|LUNCH|DINNER_COUNT set to 0
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select tt.user_id, tt.attribute_name, tt.data_type, '0' as data_value, tt.campaign_stream_steps_id, tt.list_users_id from (
select lu.user_id, css.attribute_name, css.data_type,  css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from list_users_c18 lu
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date) + 1 between css.day_start and css.day_end and css.campaign_id in (8) and rule_type = 'task_count' and task_number in (3,4,5)
where lu.campaign_id = 3 
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'task_count' and task_number in (3,4,5) and css.campaign_id in (8) ) tt;

/* C18_day_count SUCCESS greater or equal to 5 ******************* challenge 2 ******************************** logged water 7 days *************************/
--insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
drop table if exists tmp_success_users;
create temp table tmp_success_users (user_id integer, attribute_name varchar(255), list_users_id integer, data_value integer);

insert into tmp_success_users (user_id, attribute_name, list_users_id, data_value)
select t1.user_id, t1.attribute_name, t1.list_users_id , t1.data_value from (
select usw.user_id, css.attribute_name, css.data_type, sum(usw.days_logged) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.campaign_sequence
from user_stats_weekly_mon usw
inner join list_users_c18 lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id in (6,7) and rule_type = 'task_count' and campaign_sequence in (9,10) and task_number = 1 
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date, css.campaign_sequence
having sum(usw.days_logged) >= 5 
) t1;

-- C18_C9_Bonus Super Code
--insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)

insert into tmp_success_users (user_id, attribute_name, list_users_id, data_value)
select t1.user_id, t1.attribute_name, t1.list_users_id , t1.data_value from (
select usw.user_id, css.attribute_name, css.data_type, sum(usw.consumed_total_items_logged) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.campaign_sequence
from user_stats_weekly_mon usw
inner join list_users_c18 lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id in (6,7) and rule_type = 'task_count' and campaign_sequence in (9,10) and task_number = 2
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date, css.campaign_sequence
having sum(usw.consumed_total_items_logged) >= 200
) t1;

-- insert 'C18_C9_BONUS_SUPER_STATUS' | 'BONUS_SUPER_SUCCESS' into appboy user events
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select tmp.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from tmp_success_users tmp
inner join list_users_c18 lu on lu.user_id = tmp.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.attribute_name = 'C18_C9_BONUS_SUPER_STATUS'
where tmp.attribute_name = 'C18_C9_TASK_FOOD_COUNT'
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue where campaign_stream_steps_id = 300;

/*   assign promo code C18_C9_T1_Task1 Bonus ******************************************************************/

-- step 1 C18_C9_T1 assign promo code log food 5 days or more
insert into promo_code_users (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)
select t1.user_id, t2.attribute_name, t2.data_type, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users where attribute_name = 'C18_C9_TASK_DAY_COUNT' and data_value >= 5) t1
inner join 
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18 lu 
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 6 and rule_type = 'promo_code'  and task_number = 1
where  lu.campaign_id = 3 )  t2 on t1.user_id = t2.user_id
/*** add additional promo codes as rolled out unioni all *****/
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users;

/*  step 2 - update user promo codes *************************************************************/
update promo_code_users aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users 
where attribute_name = 'C18_C9_BONUS_1_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes where attribute_name = 'C18_C9_BONUS_1_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes pc
set user_id = pcu.user_id
from promo_code_users pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events where campaign_stream_steps_id = 293;

update promo_code_users
set date_sent = now()
where date_sent is null;

/** assign promo code C18_C9_T1_Task2 Bonus log 15 days **/
-- step 1 C5_T1 assign promo code log food 5 days or more
insert into promo_code_users (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)
select t1.user_id, t2.attribute_name, t2.data_type, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users where attribute_name = 'C18_C9_TASK_DAY_COUNT' and data_value >= 15) t1
inner join 
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18 lu 
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 6 and rule_type = 'promo_code'  and task_number = 2
where  lu.campaign_id = 3 )  t2 on t1.user_id = t2.user_id
/*** add additional promo codes as rolled out unioni all *****/
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users;

--select * from campaign_stream_steps where campaign_id = 6 and rule_type = 'promo_code'  and task_number = 2
/*  step 2 - update user promo codes *************************************************************/
update promo_code_users aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users 
where attribute_name = 'C18_C9_BONUS_2_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes where attribute_name = 'C18_C9_BONUS_2_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes pc
set user_id = pcu.user_id
from promo_code_users pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events where campaign_stream_steps_id = 294 ;

update promo_code_users
set date_sent = now()
where date_sent is null;

/** assign promo code C5_T1_Task2 Bonus log 15 days **/

-- step 1 C18_C9 log food count 200 or greater
insert into promo_code_users (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)
select t1.user_id, t2.attribute_name, t2.data_type, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users where attribute_name = 'C18_C9_TASK_FOOD_COUNT') t1
inner join 
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18 lu 
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 6 and rule_type = 'promo_code'  and task_number = 3
where  lu.campaign_id = 3 )  t2 on t1.user_id = t2.user_id
/*** add additional promo codes as rolled out unioni all *****/
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users;

/*  step 2 - update user promo codes *************************************************************/
update promo_code_users aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users 
where attribute_name = 'C18_C9_BONUS_SUPER_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes where attribute_name = 'C18_C9_BONUS_SUPER_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes pc
set user_id = pcu.user_id
from promo_code_users pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events where campaign_stream_steps_id = 295 ;

update promo_code_users
set date_sent = now()
where date_sent is null;

-- c18_c9_task_day_count tiered 1,2,3,4
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, css.data_type, 
case when sum(usw.days_logged) between 5 and 9 then 'TIER_1_SUCCESS' when  sum(usw.days_logged) between 10 and 14 then 'TIER_2_SUCCESS' when  sum(usw.days_logged) between 15 and 19 then 'TIER_3_SUCCESS' when  sum(usw.days_logged) >= 20 then 'TIER_4_SUCCESS'end   as data_value--,  sum(usw.days_logged)
, css.id as campaign_stream_steps_id, lu.list_id as list_users_id--, sum(usw.days_logged)
from user_stats_weekly_mon usw
inner join list_users_c18 lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 6 and attribute_name = 'C18_C9_TIER_STATUS' and rule_type = 'result_status_success'
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start - interval '28 day'  )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.days_logged) >= 5
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'result_status_success'  and css.attribute_name = 'C18_C9_TIER_STATUS'  and css.campaign_id = 6; 

-- select * from tmp_success_users

-- C18_C9_TIER_CODE_DATE
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, css.data_type, 
to_char(lu.list_start_date::date + css.day_end + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value,
css.id as campaign_stream_steps_id, lu.list_id as list_users_id--, sum(usw.days_logged)
from user_stats_weekly_mon usw
inner join list_users_c18 lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 6 and rule_type = 'promo_code_end_date' and task_number = 4
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start - interval '28 day'  )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.days_logged) >= 5
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join  campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code_end_date' and task_number = 4   and css.campaign_id = 6; 

/* C9 BONUS SUPER CODE END DATE ********************************************************************/

insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select t1.user_id, 'C18_C9_BONUS_SUPER_CODE_DATE' as attribute_name, 'String' as data_type, to_char(lu.list_start_date::date + 140 + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, 298 as  campaign_stream_steps_id
,t1.list_users_id from tmp_success_users t1
inner join list_users_c18 lu on t1.user_id = lu.user_id
where t1.attribute_name = 'C18_C9_TASK_FOOD_COUNT'
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue where campaign_stream_steps_id = 298;

/* SET EXPIRATION for Challenge 9 **************************************************************/
-- C%_T1 task 1
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select t1.user_id, t1.attribute_name, t1.data_type, t1.data_value, t1.campaign_stream_steps_id, t1.list_users_id from (
select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.task_number as css_success_id
from list_users_c18 lu 
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id  in (6,7) and css.rule_type = 'result_status_success_expire'  -- and campaign_sequence = 1
where  lu.campaign_id = 3 ) t1
inner join (select user_id, attribute_name, campaign_stream_steps_id, data_value from appboy_user_events where campaign_stream_steps_id in (300, 301)) t2 on t1.user_id = t2.user_id and t1.css_success_id = t2.campaign_stream_steps_id
except (
select tt.user_id, tt.attribute_name, tt.data_type,  tt.data_value, tt.campaign_stream_steps_id, tt.list_users_id  from (
select distinct on (aue.user_id, aue.campaign_stream_steps_id) aue.user_id, aue.attribute_name, aue.data_type,  aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id from appboy_user_events aue
where campaign_stream_steps_id in (302,303)
 order by user_id,  campaign_stream_steps_id, date_sent desc ) tt );
 

/*            Challenge 10 Promo Codes *********************************************************/

-- step 1 C18_C10_T1 assign promo code log food 5 days or more
insert into promo_code_users (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)
select t1.user_id, t2.attribute_name, t2.data_type, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users where attribute_name = 'C18_C10_TASK_DAY_COUNT' and data_value >= 5) t1
inner join 
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18 lu 
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 7 and rule_type = 'promo_code'  and task_number = 1 and attribute_name = 'C18_C10_BONUS_1_CODE'
where  lu.campaign_id = 3 )  t2 on t1.user_id = t2.user_id --and t1.user_id = 521613
/*** add additional promo codes as rolled out unioni all *****/
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users;

--select * from tmp_success_users where user_id = 521613

/*  step 2 - update user promo codes *************************************************************/
update promo_code_users aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users 
where attribute_name = 'C18_C10_BONUS_1_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes where attribute_name = 'C18_C10_BONUS_1_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes pc
set user_id = pcu.user_id
from promo_code_users pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events where campaign_stream_steps_id  = 309 ;

update promo_code_users
set date_sent = now()
where date_sent is null;

-- C10_BONUS_CODE_2
-- step 1 C18_C10_T2 assign promo code log food 15 days or more
insert into promo_code_users (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)
select t1.user_id, t2.attribute_name, t2.data_type, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from tmp_success_users where attribute_name = 'C18_C10_TASK_DAY_COUNT' and data_value >= 15) t1
inner join 
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18 lu 
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 7 and rule_type = 'promo_code'  and task_number = 2 and attribute_name = 'C18_C10_BONUS_2_CODE'
where  lu.campaign_id = 3 )  t2 on t1.user_id = t2.user_id
/*** add additional promo codes as rolled out unioni all *****/
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users;

/*  step 2 - update user promo codes *************************************************************/
update promo_code_users aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users 
where attribute_name = 'C18_C10_BONUS_2_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes where attribute_name = 'C18_C10_BONUS_2_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes pc
set user_id = pcu.user_id
from promo_code_users pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events where campaign_stream_steps_id  = 310 ;

update promo_code_users
set date_sent = now()
where date_sent is null;

/* C10_TIER_1,2,3,4_SUCCESS  ********************************************************************/

drop table if exists tmp_success_c10_tier1234;
create temp table tmp_success_c10_tier1234 (user_id integer, attribute_name varchar(255), data_value integer, campaign_stream_steps_id integer,  list_users_id integer);

insert into tmp_success_c10_tier1234 (user_id, attribute_name,  data_value, campaign_stream_steps_id, list_users_id)
select usw.user_id, css.attribute_name, sum(usw.days_logged) as data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id
from user_stats_weekly_mon usw
inner join list_users_c18 lu on lu.user_id = usw.user_id and lu.deleted_at is null and lu.campaign_id = 3  and lu.deleted_at is null
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id in (7) and rule_type = 'result_status_success' and campaign_sequence in (10) and task_number = 2
where usw.first_day_of_week between (lu.list_start_date + interval '1 day' * css.day_start )::date and (lu.list_start_date + interval '1 day' * css.day_end  - interval '1 day' )::date 
group by usw.user_id, css.attribute_name, css.id, css.data_type,lu.list_id, lu.list_start_date
having sum(usw.days_logged) >=5 ;

-- determine the tier 1,2,3,4 and update appboy_user_events
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, 'C18_C10_TIER_1_STATUS' as attribute_name, 'String' as data_type, 'C10_TIER_1_SUCCESS' as data_value, 
317 as campaign_stream_steps_id, list_users_id 
from tmp_success_c10_tier1234 where data_value >= 5
--except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue where campaign_stream_steps_id in (317);
union
select user_id, 'C18_C10_TIER_2_STATUS' as attribute_name, 'String' as data_type, 'C10_TIER_2_SUCCESS' as data_value, 
324 as campaign_stream_steps_id, list_users_id 
from tmp_success_c10_tier1234 where data_value >= 10
--except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue where campaign_stream_steps_id in (324);
union
select user_id, 'C18_C10_TIER_3_STATUS' as attribute_name, 'String' as data_type, 'C10_TIER_3_SUCCESS' as data_value, 
325 as campaign_stream_steps_id, list_users_id 
from tmp_success_c10_tier1234 where data_value >= 15
--except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue where campaign_stream_steps_id in (325);
union
select user_id, 'C18_C10_TIER_4_STATUS' as attribute_name, 'String' as data_type, 'C10_TIER_4_SUCCESS' as data_value, 
326 as campaign_stream_steps_id, list_users_id 
from tmp_success_c10_tier1234 where data_value >= 20
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue where campaign_stream_steps_id in (317,324,325,326);

-- set promo codes for tier 1,2,3,4

-- C10_tier 1,2,3,4 promo codesdetermine tiers for promo codes
insert into promo_code_users (user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id)
select user_id, 'C18_C10_TIER_1_CODE' as attribute_name, 'String' as data_type, 320 campaign_stream_steps_id, list_users_id 
from tmp_success_c10_tier1234 where data_value >= 5
union
select user_id, 'C18_C10_TIER_2_CODE' as attribute_name, 'String' as data_type, 321 campaign_stream_steps_id, list_users_id 
from tmp_success_c10_tier1234 where data_value >= 10
union
select user_id, 'C18_C10_TIER_3_CODE' as attribute_name, 'String' as data_type, 322 campaign_stream_steps_id, list_users_id 
from tmp_success_c10_tier1234 where data_value >= 15
union
select user_id, 'C18_C10_TIER_4_CODE' as attribute_name, 'String' as data_type, 323 campaign_stream_steps_id, list_users_id 
from tmp_success_c10_tier1234 where data_value >= 20
except  select user_id, attribute_name, data_type, campaign_stream_steps_id, list_users_id  from promo_code_users;

/*  step 2 - update user promo codes *************************************************************/
update promo_code_users aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users 
where attribute_name like 'C18_C10_TIER_1_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes where attribute_name like  'C18_C10_TIER_1_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_code_users aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users 
where attribute_name like 'C18_C10_TIER_2_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes where attribute_name like  'C18_C10_TIER_2_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_code_users aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users 
where attribute_name like 'C18_C10_TIER_3_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes where attribute_name like  'C18_C10_TIER_3_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_code_users aa
set promo_code = tt.promo_code
from (
select ap.user_id, ap.attribute_name, pc.promo_code from (select user_id, attribute_name, campaign_stream_steps_id, list_users_id, row_number() over (order by user_id) as row_num from promo_code_users 
where attribute_name like 'C18_C10_TIER_4_CODE' and promo_code is null) ap
inner join (select id, promo_code, row_number() over (order by id) as row_num from promo_codes where attribute_name like  'C18_C10_TIER_4_CODE' and user_id is null ) pc on ap.row_num = pc.row_num ) tt
where aa.user_id = tt.user_id and aa.attribute_name = tt.attribute_name;

update promo_codes pc
set user_id = pcu.user_id
from promo_code_users pcu
where pcu.attribute_name = pc.attribute_name and pcu.promo_code = pc.promo_code 
and pc.user_id is null;

/* step 3 - send appboy user events ********************/

insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select user_id, attribute_name, data_type, promo_code as data_value, campaign_stream_steps_id, list_users_id from promo_code_users where date_sent is null
except  select user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id  from appboy_user_events where campaign_stream_steps_id  in  (320,321,322,323) ;

update promo_code_users
set date_sent = now()
where date_sent is null;

/* C10_TIER_1,2,3,4_SUCCESS END DATE ********************************************************************/

insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
select t1.user_id, 'C18_C10_TIER_CODE_DATE' as attribute_name, 'String' as data_type, to_char(lu.list_start_date::date + 168 + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, 315 as  campaign_stream_steps_id
,t1.list_users_id from tmp_success_c10_tier1234 t1
inner join list_users_c18 lu on t1.user_id = lu.user_id
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue where campaign_stream_steps_id = 315;

-- promo code end date c18_c9 bonus codes
insert into appboy_user_events (user_id, attribute_name, data_type, data_value, campaign_stream_steps_id, list_users_id)
-- C1_T1 
select t1.user_id, t2.attribute_name, t2.data_type, to_char(t2.list_start_date::date + t2.day_end + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from promo_code_users where attribute_name = 'C18_C9_BONUS_1_CODE') t1
inner join  -- change 1/09
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18 lu 
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 6 and rule_type = 'promo_code_end_date' and task_number = 1
where  lu.campaign_id = 3 )  t2 on t1.user_id = t2.user_id
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code_end_date' and  css.campaign_id = 6 and task_number = 1
  union all
select t1.user_id, t2.attribute_name, t2.data_type, to_char(t2.list_start_date::date + t2.day_end + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from promo_code_users where attribute_name = 'C18_C9_BONUS_2_CODE' ) t1
inner join  -- change 1/09
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18 lu 
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 6 and rule_type = 'promo_code_end_date' and task_number = 2
where  lu.campaign_id = 3 )  t2 on t1.user_id = t2.user_id
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code_end_date' and  css.campaign_id = 6 and task_number = 2
 union all
select t1.user_id, t2.attribute_name, t2.data_type, to_char(t2.list_start_date::date + t2.day_end + 6 * INTERVAL '1 day', 'MM /DD /YYYY') as data_value, t2.campaign_stream_steps_id, t2.list_users_id 
from (select distinct(user_id) from promo_code_users where attribute_name =  'C18_C9_BONUS_SUPER_CODE' ) t1
inner join  -- change 1/09
(select lu.user_id, css.attribute_name, css.data_type, css.data_value, css.id as campaign_stream_steps_id, lu.list_id as list_users_id, css.day_in, css.day_start, css.day_end, lu.list_start_date
from list_users_c18 lu 
inner join campaign_stream_steps css on datediff('day', lu.list_start_date::date, _datetime::date)  between day_start and day_end and css.campaign_id = 6 and rule_type = 'promo_code_end_date' and task_number = 3
where  lu.campaign_id = 3 )  t2 on t1.user_id = t2.user_id
except  select aue.user_id, aue.attribute_name, aue.data_type, aue.data_value, aue.campaign_stream_steps_id, aue.list_users_id  from appboy_user_events aue
inner join campaign_stream_steps css on aue.campaign_stream_steps_id = css.id and rule_type = 'promo_code_end_date' and  css.campaign_id = 6 and task_number = 3;




insert into challenge_run_log (function_name, created_at, updated_at)
select 'challenge_9_numi_update' as function_name, current_timestamp as created_at, current_timestamp as updated_at;

update challenge_run_log
set updated_at = clock_timestamp()
where id in (select id from challenge_run_log where function_name = 'challenge_9_numi_update' order by created_at desc limit 1);

drop table if exists tmp_success_c10_tier1234;
drop table if exists tmp_success_users;
drop table if exists tmp_c11_date_range_numi;

END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION public.challenge_super_update(timestamp without time zone, integer)
  OWNER TO gfuser;
