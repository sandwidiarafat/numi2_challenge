-- FUNCTION: public.list_users_c19_numi_update()

-- DROP FUNCTION public.list_users_c19_numi_update();

CREATE OR REPLACE FUNCTION public.list_users_c19_numi_update(
	)
    RETURNS void
    LANGUAGE 'plpgsql'

    COST 1000
    VOLATILE 
AS $BODY$
BEGIN

/** create daily user list **/

insert into challenge_run_log (function_name, created_at, updated_at)
select 'list_users_c19_numi_update' as function_name, current_timestamp as created_at, current_timestamp as updated_at;
	
insert into list_users_c19  
(user_id, start_date, list_id, created_at, updated_at, campaign_id, list_start_date)

select t1.user_id, t1.start_date, t1.list_id, t1.created_at, t1.updated_at, t1.campaign_id, t1.list_start_date 
from (
select p.user_id,(p.created_at + tz.utc_offset)::date as start_date, l.id as list_id, now() as created_at, now() as updated_at, l.campaign_id, 	l.list_start_date as list_start_date 
from profiles_numi2 p 
inner join users_numi2 u on p.user_id = u.id
inner join pg_timezone_names tz on tz.name = u.timezone
inner join lists l on (p.created_at + tz.utc_offset)::date between l.date_start and l.date_end and (p.created_at + tz.utc_offset)::date < now()::date --and l.campaign_id = 3
where p.user_id >= 1500000 and l.campaign_id = 14
	union
select p.user_id,(dm.profile_start_date + tz.utc_offset)::date as start_date, l.id as list_id, now() as created_at, now() as updated_at, l.campaign_id, l.list_start_date as list_start_date 
from profiles_numi2 p 
inner join users_numi2 u on p.user_id = u.id
inner join pg_timezone_names tz on tz.name = u.timezone
inner join data_migrations_numi2 dm on p.user_id = dm.user_id
inner join lists l on (dm.profile_start_date + tz.utc_offset)::date between l.date_start and l.date_end and (dm.profile_start_date + tz.utc_offset)::date < now()::date --and l.campaign_id = 3
where p.user_id < 1500000  and l.campaign_id = 14
) t1
left join list_users_c19 bb on t1.user_id = bb.user_id and t1.campaign_id = bb.campaign_id
 where bb.user_id is null
order by t1.list_id, t1.user_id;


update challenge_run_log
set updated_at = clock_timestamp()
where id in (select id from challenge_run_log where function_name = 'list_users_c19_numi_update' order by created_at desc limit 1);


END;
$BODY$;

ALTER FUNCTION public.list_users_c19_numi_update()
    OWNER TO gfuser;
